use std::sync::Arc;

use chrono::NaiveDate;

use par_reader::models::{
    Child, Family, Individual, Parent,
    family::FamilyType,
    individual::{EducationLevel, Gender, Origin},
};

// Helper function to create test families
#[must_use] pub fn create_test_families() -> Vec<Family> {
    // Create test individuals to use as parents and children
    let mother1 = Arc::new(Individual {
        pnr: "mother1".to_string(),
        birth_date: Some(NaiveDate::from_ymd_opt(1975, 5, 15).unwrap()),
        gender: Gender::Female,
        is_rural: true,
        death_date: None,
        origin: Origin::Danish,
        education_level: EducationLevel::Medium,
        municipality_code: Some("101".to_string()),
        mother_pnr: None,
        father_pnr: None,
        family_id: Some("family1".to_string()),
        emigration_date: None,
        immigration_date: None,
    });

    let father1 = Arc::new(Individual {
        pnr: "father1".to_string(),
        birth_date: Some(NaiveDate::from_ymd_opt(1973, 8, 22).unwrap()),
        gender: Gender::Male,
        is_rural: true,
        death_date: None,
        origin: Origin::Danish,
        education_level: EducationLevel::High,
        municipality_code: Some("101".to_string()),
        mother_pnr: None,
        father_pnr: None,
        family_id: Some("family1".to_string()),
        emigration_date: None,
        immigration_date: None,
    });

    let mother2 = Arc::new(Individual {
        pnr: "mother2".to_string(),
        birth_date: Some(NaiveDate::from_ymd_opt(1980, 3, 10).unwrap()),
        gender: Gender::Female,
        is_rural: false,
        death_date: None,
        origin: Origin::Danish,
        education_level: EducationLevel::High,
        municipality_code: Some("102".to_string()),
        mother_pnr: None,
        father_pnr: None,
        family_id: Some("family2".to_string()),
        emigration_date: None,
        immigration_date: None,
    });

    // Create some child individuals
    let child1 = Arc::new(Individual {
        pnr: "child1".to_string(),
        birth_date: Some(NaiveDate::from_ymd_opt(2000, 5, 12).unwrap()),
        gender: Gender::Male,
        is_rural: true,
        death_date: None,
        origin: Origin::Danish,
        education_level: EducationLevel::Low,
        municipality_code: Some("101".to_string()),
        mother_pnr: Some("mother1".to_string()),
        father_pnr: Some("father1".to_string()),
        family_id: Some("family1".to_string()),
        emigration_date: None,
        immigration_date: None,
    });

    // Create child structs from the individuals
    let child1_struct = Arc::new(Child::from_individual(child1));

    let _reference_date = NaiveDate::from_ymd_opt(2023, 1, 1).unwrap();

    vec![
        Family {
            family_id: "family1".to_string(),
            family_type: FamilyType::TwoParent,
            is_rural: true,
            has_parental_comorbidity: false,
            has_support_network: true,
            children: vec![child1_struct.clone()],
            mother: Some(Arc::new(Parent::new(mother1))),
            father: Some(Arc::new(Parent::new(father1))),
            municipality_code: Some("101".to_string()),
            valid_from: NaiveDate::from_ymd_opt(2000, 1, 1).unwrap(),
            valid_to: None,
        },
        Family {
            family_id: "family2".to_string(),
            family_type: FamilyType::SingleMother,
            is_rural: false,
            has_parental_comorbidity: true,
            has_support_network: false,
            children: vec![
                // Create 3 children
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child2".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2005, 6, 15).unwrap()),
                    gender: Gender::Female,
                    is_rural: false,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("102".to_string()),
                    mother_pnr: Some("mother2".to_string()),
                    father_pnr: None,
                    family_id: Some("family2".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child3".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2007, 8, 20).unwrap()),
                    gender: Gender::Male,
                    is_rural: false,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("102".to_string()),
                    mother_pnr: Some("mother2".to_string()),
                    father_pnr: None,
                    family_id: Some("family2".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child4".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2010, 2, 10).unwrap()),
                    gender: Gender::Female,
                    is_rural: false,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("102".to_string()),
                    mother_pnr: Some("mother2".to_string()),
                    father_pnr: None,
                    family_id: Some("family2".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
            ],
            mother: Some(Arc::new(Parent::new(mother2))),
            father: None,
            municipality_code: Some("102".to_string()),
            valid_from: NaiveDate::from_ymd_opt(2005, 1, 1).unwrap(),
            valid_to: None,
        },
        Family {
            family_id: "family3".to_string(),
            family_type: FamilyType::TwoParent,
            is_rural: true,
            has_parental_comorbidity: false,
            has_support_network: true,
            children: vec![
                // Create 6 children with parent references
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child5".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2002, 5, 15).unwrap()),
                    gender: Gender::Male,
                    is_rural: true,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("103".to_string()),
                    mother_pnr: Some("mother3".to_string()),
                    father_pnr: Some("father3".to_string()),
                    family_id: Some("family3".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child6".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2004, 7, 20).unwrap()),
                    gender: Gender::Female,
                    is_rural: true,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("103".to_string()),
                    mother_pnr: Some("mother3".to_string()),
                    father_pnr: Some("father3".to_string()),
                    family_id: Some("family3".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child7".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2006, 3, 10).unwrap()),
                    gender: Gender::Male,
                    is_rural: true,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("103".to_string()),
                    mother_pnr: Some("mother3".to_string()),
                    father_pnr: Some("father3".to_string()),
                    family_id: Some("family3".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child8".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2008, 9, 25).unwrap()),
                    gender: Gender::Female,
                    is_rural: true,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("103".to_string()),
                    mother_pnr: Some("mother3".to_string()),
                    father_pnr: Some("father3".to_string()),
                    family_id: Some("family3".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child9".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2010, 11, 5).unwrap()),
                    gender: Gender::Male,
                    is_rural: true,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("103".to_string()),
                    mother_pnr: Some("mother3".to_string()),
                    father_pnr: Some("father3".to_string()),
                    family_id: Some("family3".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
                Arc::new(Child::from_individual(Arc::new(Individual {
                    pnr: "child10".to_string(),
                    birth_date: Some(NaiveDate::from_ymd_opt(2012, 1, 30).unwrap()),
                    gender: Gender::Female,
                    is_rural: true,
                    death_date: None,
                    origin: Origin::Danish,
                    education_level: EducationLevel::Low,
                    municipality_code: Some("103".to_string()),
                    mother_pnr: Some("mother3".to_string()),
                    father_pnr: Some("father3".to_string()),
                    family_id: Some("family3".to_string()),
                    emigration_date: None,
                    immigration_date: None,
                }))),
            ],
            // Create parents
            mother: Some(Arc::new(Parent::new(Arc::new(Individual {
                pnr: "mother3".to_string(),
                birth_date: Some(NaiveDate::from_ymd_opt(1978, 11, 28).unwrap()),
                gender: Gender::Female,
                is_rural: true,
                death_date: None,
                origin: Origin::Danish,
                education_level: EducationLevel::Medium,
                municipality_code: Some("103".to_string()),
                mother_pnr: None,
                father_pnr: None,
                family_id: Some("family3".to_string()),
                emigration_date: None,
                immigration_date: None,
            })))),
            father: Some(Arc::new(Parent::new(Arc::new(Individual {
                pnr: "father3".to_string(),
                birth_date: Some(NaiveDate::from_ymd_opt(1976, 4, 17).unwrap()),
                gender: Gender::Male,
                is_rural: true,
                death_date: None,
                origin: Origin::Danish,
                education_level: EducationLevel::Medium,
                municipality_code: Some("103".to_string()),
                mother_pnr: None,
                father_pnr: None,
                family_id: Some("family3".to_string()),
                emigration_date: None,
                immigration_date: None,
            })))),
            municipality_code: Some("103".to_string()),
            valid_from: NaiveDate::from_ymd_opt(2002, 1, 1).unwrap(),
            valid_to: None,
        },
    ]
}
