src/models/income.rs:160:13: warning: binding's name is too similar to existing binding
src/models/adapters/lpr_adapter.rs:361:21: warning: binding's name is too similar to existing binding
src/models/adapters/lpr_adapter.rs:518:21: warning: binding's name is too similar to existing binding
src/algorithm/population/core.rs:220:13: warning: value assigned to `progress` is never read
src/algorithm/population/core.rs:127:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/core.rs:130:21: warning: this argument is passed by value, but not consumed in the function body: help: consider taking a reference instead: `&Option<HashSet<String>>`
src/algorithm/population/core.rs:288:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:289:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:290:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:291:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:292:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:296:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:303:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:304:9: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:326:17: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:330:23: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:336:13: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:337:13: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:353:41: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:358:17: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:367:17: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:371:23: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:377:13: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:384:25: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:384:48: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/core.rs:386:13: warning: `format!(..)` appended to existing `String`
src/algorithm/population/core.rs:458:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/core.rs:482:32: warning: casting `u32` to `i32` may wrap around the value
src/algorithm/population/core.rs:492:32: warning: casting `u32` to `i32` may wrap around the value
src/algorithm/population/core.rs:520:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/core.rs:576:5: warning: docs for function which may panic missing `# Panics` section
src/algorithm/population/core.rs:644:5: warning: docs for function which may panic missing `# Panics` section
src/algorithm/population/filters.rs:58:35: warning: casting `i32` to `u32` may lose the sign of the value
src/algorithm/population/filters.rs:233:72: warning: this argument is passed by value, but not consumed in the function body: help: consider taking a reference instead: `&F`
src/algorithm/population/filters.rs:244:62: warning: this argument is passed by value, but not consumed in the function body: help: consider taking a reference instead: `&F`
src/algorithm/population/filters.rs:255:72: warning: this argument is passed by value, but not consumed in the function body: help: consider taking a reference instead: `&F`
src/algorithm/population/integration.rs:115:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:145:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:193:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:251:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:283:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:321:29: warning: adding items after statements is confusing, since items exist from the start of the scope
src/algorithm/population/integration.rs:322:33: warning: adding items after statements is confusing, since items exist from the start of the scope
src/algorithm/population/integration.rs:322:48: warning: adding items after statements is confusing, since items exist from the start of the scope
src/algorithm/population/integration.rs:322:65: warning: adding items after statements is confusing, since items exist from the start of the scope
src/algorithm/population/integration.rs:350:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:407:5: warning: docs for function which may panic missing `# Panics` section
src/algorithm/population/integration.rs:407:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:457:61: warning: casting `i32` to `u64` may lose the sign of the value
src/algorithm/population/integration.rs:492:5: warning: docs for function which may panic missing `# Panics` section
src/algorithm/population/integration.rs:492:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:532:61: warning: casting `i32` to `u64` may lose the sign of the value
src/algorithm/population/integration.rs:557:5: warning: docs for function returning `Result` missing `# Errors` section
src/algorithm/population/integration.rs:604:46: warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/algorithm/population/integration.rs:620:51: warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
src/algorithm/population/integration.rs:620:51: warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
src/config/mod.rs:7:1: warning: more than 3 bools in a struct
src/filter/core.rs:328:13: warning: this argument is passed by value, but not consumed in the function body: help: consider taking a reference instead: `&Arc<dyn BatchFilter + Send + Sync>`
src/filter/expr.rs:165:5: warning: this function has too many lines (103/100)
src/filter/expr.rs:383:9: warning: this could be rewritten as `let...else`: help: consider writing: `let Ok(col_idx) = batch.schema().index_of(col_name) else { return crate::filter::error::column_not_found(col_name) };`
src/filter/expr.rs:401:9: warning: unused `self` argument
src/filter/expr.rs:429:9: warning: unused `self` argument
src/filter/expr.rs:528:9: warning: unused `self` argument
src/filter/expr.rs:587:9: warning: unused `self` argument
src/filter/expr.rs:646:9: warning: unused `self` argument
src/filter/expr.rs:667:9: warning: unused `self` argument
src/filter/expr.rs:744:9: warning: unused `self` argument
src/filter/expr.rs:772:9: warning: unused `self` argument
src/filter/expr.rs:800:9: warning: unused `self` argument
src/filter/pnr.rs:87:9: warning: unused `self` argument
src/filter/pnr.rs:86:5: warning: this function's return value is unnecessarily wrapped by `Result`
src/filter/pnr.rs:207:1: warning: docs for function which may panic missing `# Panics` section
src/filter/pnr.rs:212:25: warning: parameter of type `HashSet` should be generalized over different hashers
src/filter/pnr.rs:368:15: warning: parameter of type `HashMap` should be generalized over different hashers
src/filter/pnr.rs:369:13: warning: parameter of type `HashMap` should be generalized over different hashers
src/filter/pnr.rs:370:19: warning: parameter of type `HashMap` should be generalized over different hashers
src/filter/pnr.rs:416:15: warning: parameter of type `HashMap` should be generalized over different hashers
src/filter/pnr.rs:417:18: warning: parameter of type `HashSet` should be generalized over different hashers
src/filter/date.rs:256:1: warning: docs for function which may panic missing `# Panics` section
src/filter/error.rs:17:1: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:29:1: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:44:1: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:57:1: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:69:1: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:82:1: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:89:5: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:92:5: warning: docs for function returning `Result` missing `# Errors` section
src/filter/error.rs:95:5: warning: docs for function returning `Result` missing `# Errors` section
src/filter/async.rs:73:1: warning: docs for function which may panic missing `# Panics` section
src/models/individual.rs:260:5: warning: docs for function which may panic missing `# Panics` section
src/models/individual.rs:260:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/individual.rs:260:5: warning: this function has too many lines (141/100)
src/models/individual.rs:352:65: warning: casting `i32` to `u64` may lose the sign of the value
src/models/individual.rs:362:65: warning: casting `i32` to `u64` may lose the sign of the value
src/models/individual.rs:396:33: warning: casting `i32` to `u64` may lose the sign of the value
src/models/individual.rs:408:33: warning: casting `i32` to `u64` may lose the sign of the value
src/models/individual.rs:422:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/parent.rs:179:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/child.rs:217:5: warning: docs for function which may panic missing `# Panics` section
src/models/child.rs:297:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/diagnosis.rs:91:5: warning: docs for function which may panic missing `# Panics` section
src/models/diagnosis.rs:105:13: warning: this match arm has an identical body to another arm
src/models/diagnosis.rs:152:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/diagnosis.rs:198:5: warning: docs for function which may panic missing `# Panics` section
src/models/income.rs:50:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/income.rs:141:20: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/models/income.rs:151:17: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/models/income.rs:194:63: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/models/income.rs:195:65: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/models/income.rs:414:63: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/models/income.rs:415:65: warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
src/models/adapters/mod.rs:13:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/mod.rs:16:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/bef_adapter.rs:21:5: warning: this function has too many lines (190/100)
src/models/adapters/bef_adapter.rs:193:61: warning: casting `i32` to `u64` may lose the sign of the value
src/models/adapters/bef_adapter.rs:347:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/bef_adapter.rs:357:10: warning: very complex type used. Consider factoring parts into `type` definitions
src/models/adapters/bef_adapter.rs:358:32: warning: very complex type used. Consider factoring parts into `type` definitions
src/models/adapters/ind_adapter.rs:33:15: warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte): help: consider passing by value instead: `self`
src/models/adapters/ind_adapter.rs:82:30: warning: unused `self` argument
src/models/adapters/ind_adapter.rs:200:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/ind_adapter.rs:313:5: warning: docs for function which may panic missing `# Panics` section
src/models/adapters/ind_adapter.rs:313:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/ind_adapter.rs:469:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/lpr_adapter.rs:93:22: warning: unused `self` argument
src/models/adapters/lpr_adapter.rs:180:30: warning: unused `self` argument
src/models/adapters/lpr_adapter.rs:257:5: warning: docs for function which may panic missing `# Panics` section
src/models/adapters/lpr_adapter.rs:257:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/lpr_adapter.rs:353:69: warning: casting `i32` to `u64` may lose the sign of the value
src/models/adapters/lpr_adapter.rs:412:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/lpr_adapter.rs:558:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/lpr_adapter.rs:567:5: warning: docs for function returning `Result` missing `# Errors` section
src/models/adapters/mfr_adapter.rs:32:9: warning: unused `self` argument
src/models/adapters/mfr_adapter.rs:35:10: warning: very complex type used. Consider factoring parts into `type` definitions
src/models/adapters/mfr_adapter.rs:123:9: warning: unused `self` argument
src/models/adapters/mfr_adapter.rs:192:61: warning: casting `i32` to `u64` may lose the sign of the value
src/models/adapters/mfr_adapter.rs:207:32: warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
src/models/adapters/mfr_adapter.rs:207:32: warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
src/models/adapters/mfr_adapter.rs:235:5: warning: docs for function returning `Result` missing `# Errors` section
src/pnr_filter.rs:25:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/mod.rs:37:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry/lpr/discovery.rs:25:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/factory.rs:13:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/factory.rs:34:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/factory.rs:80:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/factory.rs:82:25: warning: parameter of type `HashSet` should be generalized over different hashers
src/registry/factory.rs:109:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/factory.rs:111:25: warning: parameter of type `HashSet` should be generalized over different hashers
src/registry/transform.rs:20:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/transform.rs:43:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/transform.rs:57:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/transform.rs:63:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/transform.rs:72:9: warning: this could be rewritten as `let...else`
src/registry/transform.rs:121:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/transform.rs:124:15: warning: parameter of type `HashMap` should be generalized over different hashers
src/registry/transform.rs:173:1: warning: docs for function which may panic missing `# Panics` section
src/registry/transform.rs:173:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry/transform.rs:245:1: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:70:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:88:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:107:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:116:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:211:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:270:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:412:5: warning: docs for function returning `Result` missing `# Errors` section
src/registry_manager.rs:433:5: warning: docs for function returning `Result` missing `# Errors` section
src/schema/adapt/compatibility.rs:24:9: warning: this match arm has an identical body to another arm
src/schema/adapt/compatibility.rs:46:9: warning: this match arm has an identical body to another arm
src/schema/adapt/compatibility.rs:52:9: warning: this match arm has an identical body to another arm
src/schema/adapt/compatibility.rs:58:9: warning: this match arm has an identical body to another arm
src/schema/adapt/compatibility.rs:70:9: warning: this match arm has an identical body to another arm
src/schema/adapt/schema_compat.rs:117:1: warning: docs for function returning `Result` missing `# Errors` section
src/schema/adapt/conversions.rs:17:1: warning: docs for function returning `Result` missing `# Errors` section
src/schema/adapt/conversions.rs:94:1: warning: docs for function returning `Result` missing `# Errors` section
src/schema/adapt/conversions.rs:126:28: warning: casting `i64` to `i32` may truncate the value
src/schema/adapt/conversions.rs:186:11: warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte): help: consider passing by value instead: `arrow::datatypes::TimeUnit`
src/schema/adapt/conversions.rs:264:53: warning: casting `i64` to `u32` may truncate the value
src/schema/adapt/conversions.rs:264:53: warning: casting `i64` to `u32` may lose the sign of the value
src/schema/adapt/conversions.rs:279:11: warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte): help: consider passing by value instead: `arrow::datatypes::TimeUnit`
src/schema/adapt/conversions.rs:326:61: warning: casting `i64` to `u32` may truncate the value
src/schema/adapt/conversions.rs:326:61: warning: casting `i64` to `u32` may lose the sign of the value
src/schema/adapt/conversions.rs:352:21: warning: casting `i64` to `u32` may truncate the value
src/schema/adapt/conversions.rs:352:21: warning: casting `i64` to `u32` may lose the sign of the value
src/schema/adapt/conversions.rs:378:69: warning: casting `i64` to `u32` may lose the sign of the value
src/schema/adapt/conversions.rs:433:20: warning: casting `i64` to `i32` may truncate the value
src/schema/adapt/conversions.rs:463:1: warning: this function's return value is unnecessarily wrapped by `Result`
src/utils/mod.rs:184:1: warning: this function has too many lines (104/100)
warning: `par-reader` (lib) generated 193 warnings (6 duplicates)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.05s
